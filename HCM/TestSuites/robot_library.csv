TAG,FILENAME,DOCUMENTATION,PREREQUISITE,ENVIRONMENT SPECIFIC DATA,REUSABLE DATA,DYNAMIC DATA,TEST CASE NAME
AbsenceHRTestCase, "td_ABS_TC001_Absence_plan_enrollment_of_newly_hired_employee(HR)", Absence plan enrollment of a newly hired employee (HR), HR-81 and  Employee should be an new hire, Login User; Person Name, Not Applicable, Employee Hired Date is should be an hired date of an employee, ABS_TC001_Absence_plan_enrollment_of_newly_hired_employee_HR.robot
AbsenceHRTestCase, "td_ABS_TC002_Update_absence_plan_enrollment_due_to_promotion_demotion_transfer_etc_for_an_employee", Update Absence plan enrollment - Promotion/transfer/ Demotion, HR-16; HR-86; HR-17, Login User; Person Name; Person Number, Parent Action; Child Action; Accruals Plan; Date; Status, Not Applicable, ABS_TC002_Update_absence_plan_enrollment_due_to_promotion_demotion_transfer_etc_for_an_employee.robot
AbsenceHRTestCase, "td_ABS_TC004_Validate_Absence_Plans_Upon_Termination", Absence HR - Validate absence plans upon termination, DC09, Login User meeting the prerequisite; Person number; Person Name, Parent Action;Child Action;Accruals Plan;Status; Accruals Plan Effective date, Not applicable, ABS_TC004_Validate_Absence_Plans_Upon_Termination.robot
AbsenceHRTestCase, "td_ABS_TC005_Qualification_Absence_Record_Creation_For_An_Employee", Qualification Absence Record Creation For an Employee, Person number from ORC as a Converted Employee, , Absence Type; Absence Start Date; Absence End date; Absence Reason, NA, ABS_TC005_Qualification_Absence_Record_Creation_For_An_Employee.robot
AbsenceHRTestCase, "td_ABS_TC006_HR_Absence_Reports", HR Absence Reports, Not Applicable, Login User, Folder Name; Report Name, Not Applicable, ABS_TC006_HR_Absence_Reports.robot
PFPTestCase, "td_CMP_TC001_01_Workforce_Compensation_Configuration_Create_New_Plan_Cycle", Create New Plan Cycle, Not Applicable, , Not Applicable, Plan Cycle Name; Evaluation Period Start Date; Evaluation Period End Date; Plan Access Start Date; Plan Access End Date; Plan Short Name; HR Data Extraction Date, CMP_TC001_01_Workforce_Compensation_Configuration_Create_New_Plan_Cycle.robot
PFPTestCase, "td_CMP_TC001_05_Workforce_Compensation_Configuration_Modify_Engagement_Percentages_To_Be_Allocated_Based_On_Division", Workforce Compensation - Configuration - Modify Engagement Percentages To Be Allocated Based On Division, Not Applicable, , Compensation Option;Name;Range Or Match option;Action;User Defined Row Name;User Defined Value, Not Applicable, CMP_TC001_05_Workforce_Compensation_Configuration_Modify_Engagement_Percentages_To_Be_Allocated_Based_On_Division.robot
PFPTestCase, "td_CMP_TC001_06_Workforce_Compensation_Configuration_Modify_Iindividual_Performance_Percentages_To_Be_Allocated_Based_On_Performance_Rating", Workforce Compensation - Configuration - Modify individual performance percentages to be allocated based on performance rating, Not Applicable, , Worksheet Task;Task Name;Detail Column Name;User Defined Column Name;Column result value, Not Applicable, CMP_TC001_06_Workforce_Compensation_Configuration_Modify_Iindividual_Performance_Percentages_To_Be_Allocated_Based_On_Performance_Rating.robot
PFPTestCase, "td_CMP_TC001_07_Workforce_Compensation_Standard_Functionality_Administer_Employees_Mark_Employee_As_Eligible_For_PFP", Workforce Compensation - Standard Functionality - Administer Employees (mark employee as eligible for PFP), Person numbers with ineligible for PFP, Manager Login(PFP_common_test_data.csv); Person Number, Workforce Compensation group(PFP_common_test_data.csv); Eligibility Status, Not Applicable, CMP_TC001_07_Workforce_Compensation_Standard_Functionality_Administer_Employees_Mark_Employee_As_Eligible_For_PFP.robot
PFPTestCase, "td_CMP_TC001_08_Workforce_Compensation_Standard_Functionality_Administer_Employees_Mark_Employee_As_Ineligible_For_PFP", Workforce Compensation - Standard Functionality - Administer Employees (mark employee as ineligible for PFP), Person numbers with eligible for PFP, Manager Login(PFP_common_test_data.csv); Person Number, Workforce Compensation group(PFP_common_test_data.csv); Eligibility Status, Not Applicable, CMP_TC001_08_Workforce_Compensation_Standard_Functionality_Administer_Employees_Mark_Employee_As_Ineligible_For_PFP.robot
PFPTestCase, "td_CMP_TC001_10_Workforce_Compensation_Standard_Functionality_Run_Batch_Processes_Start_Workforce_Compensation_Cycle", Workforce Compensation - Standard Functionality - Run Batch Processes - Start Workforce Compensation Cycle, CMP_TC001_01_Workforce_Compensation_Configuration_Create_New_Plan_Cycle, Manager Login(PFP_common_test_data.csv), Plan(PFP_common_test_data.csv);Cycle(PFP_common_test_data.csv);Batch Process, Not Applicable, CMP_TC001_10_Workforce_Compensation_Standard_Functionality_Run_Batch_Processes_Start_Workforce_Compensation_Cycle.robot
PFPTestCase, "td_CMP_TC001_11_Workforce_Compensation_Standard_Functionality_Run_Batch_Processes_Refresh_Workforce_Compensation_Data", Workforce Compensation - Standard Functionality - Run Batch Processes - Start Workforce Compensation Cycle, CMP_TC001.10, Manager Login(PFP_common_test_data.csv), Plan(PFP_common_test_data.csv);Cycle(PFP_common_test_data.csv);Batch Process; Refresh Date; Refresh Option, Not Applicable, CMP_TC001_11_Workforce_Compensation_Standard_Functionality_Run_Batch_Processes_Refresh_Workforce_Compensation_Data.robot
PFPTestCase, "td_CMP_TC001_12_Workforce_Compensation_Standard_Functionality_Run_Batch_Processes_Transfer_Workforce_Compensation_Data_to_HR", Workforce Compensation - Standard Functionality - Run Batch Processes - Transfer Workforce Compensation Data to HR, CMP_TC001.10, Manager Login(PFP_common_test_data.csv), Plan(PFP_common_test_data.csv);Cycle(PFP_common_test_data.csv);Batch Process;Radio Button;Action;Action Reason;Element Posting Date;Mark Assignments as Processed, Not Applicable, CMP_TC001_12_Workforce_Compensation_Standard_Functionality_Run_Batch_Processes_Transfer_Workforce_Compensation_Data_to_HR.robot
PFPTestCase, "td_CMP_TC001_13_Workforce_Compensation_Standard_Functionality_Run_Batch_Processes_Back_Out_Workforce_Compensation_Data", Workforce Compensation - Standard Functionality - Run Batch Processes - Back Out Workforce Compensation Data, CMP_TC001.10, Manager Login(PFP_common_test_data.csv), Plan(PFP_common_test_data.csv);Cycle(PFP_common_test_data.csv);Batch Process; Back Out Level, Not Applicable, CMP_TC001_13_Workforce_Compensation_Standard_Functionality_Run_Batch_Processes_Back_Out_Workforce_Compensation_Data.robot
PFPTestCase, "td_CMP_TC001_17_FUT_Hierarchy_Proxy_as_chairperson_as_defined_in_UDT", FUT - Hierarchy - Proxy as chairperson as defined in UDT, CMP_TC001.01; CMP_TC001.10 and User with Proxy manager access, Manager Login(PFP_common_test_data.csv); Proxy Manager Name(PFP_common_test_data.csv), Not Applicable, Not Applicable, CMP_TC001_17_FUT_Hierarchy_Proxy_as_chairperson_as_defined_in_UDT.robot
PFPTestCase, "td_CMP_TC033_00_Allocate_Workforce_Compensation_Manage_Budgets_Distribute_Initial_Budget", Validate that the ratings captured at the captured at the calibration step are applied to both assignments, User with Proxy manager access; CMP_TC001.01 - Workforce Compensation - Configuration - Create new plan cycle; CMP_TC001.10 - Workforce Compensation - Standard Functionality - Run Batch Processes - Start Workforce Compensation Cycle, Manager Login(PFP_common_test_data.csv); Proxy Manager Name, Not Applicable, Not Applicable, CMP_TC001_19_FUT_Performance_Rating_Validate_that_ratings_are_captured_at_the_calibration_step_are_applied_to_both_assignments_multiple_assignments.robot
CompensationTestCase, "td_CMP_TC001_Manage_Salary_Update_Salary_NA_Employee_Type_E_FT", Salary change of an Employee, Employee details should be present in environment or use person number from available list (SME Intervention Needed), Manager Login(Compensation_common_test_data.csv); Person number, Action; Salary Amount, Not Applicable, CMP_TC001_Manage_Salary_Update_Salary_NA_Employee_Type_E_FT.robot
CompensationTestCase, "td_CMP_TC002_Grade_Step_Progression_GSP_Run_GSP_for_ATUOF1885_6_month_increase_for_Start_Step_1", Comp Admin run GSP for ATUOF 1885, Not Applicable, HR Specialist Login(Compensation_common_test_data.csv), Grade Ladder; Grade Ladder Group(Compensation_common_test_data.csv), Not Applicable, CMP_TC002_Grade_Step_Progression_GSP_Run_GSP_for_ATUOF1885_6_month_increase_for_Start_Step_1.robot
CompensationTestCase, "td_CMP_TC003_Grade_Step_Progression_GSP_Run_GSP_for_ATU2080_Primary_ATU_and_Temp_ATUOF", Grade Step Progression (GSP) - Run GSP for ATU2080 (Primary ATU and Temp ATUOF), Not Applicable, HR Specialist Login(Compensation_common_test_data.csv), Grade Ladder; Grade Ladder Group(Compensation_common_test_data.csv); Compensation Process Effective Date, Not Applicable, CMP_TC003_Grade_Step_Progression_GSP_Run_GSP_for_ATU2080_Primary_ATU_and_Temp_ATUOF.robot
CompensationTestCase, "td_CMP_TC005_Synchronize_Grade_Step_Rates_Upload_updated_salary_records_in_HCM", Synchronize Grade Step Rates - Upload updated salary records in HCM, No Data Dependency, , Compensation Process Effective Date, Not Applicable, CMP_TC005_Synchronize_Grade_Step_Rates_Upload_updated_salary_records_in_HCM.robot
CompensationTestCase, "td_CMP_TC009_Reports_Generate_Compensaton_Change_Statements_AFTER_PFP_is_Processed", Administrative Report showing comp change Statements, Not Applicable, Manager Login(Compensation_common_test_data.csv), , Not Applicable, CMP_TC009_Reports_Generate_Compensaton_Change_Statements_AFTER_PFP_is_Processed.robot
PFPTestCase, "td_CMP_TC010_00_Allocate_Workforce_Compensation_Verify_custom_alerts_Salary_below_minimum_range_even_after_the_increase", Allocate Workforce Compensation - Verify custom alerts - Salary below minimum range even after the increase, Not Applicable, Manager Login(PFP_common_test_data.csv), Plan(PFP_common_test_data.csv);Task Name;Alert Name, Not Applicable, CMP_TC010_00_Allocate_Workforce_Compensation_Verify_custom_alerts_Salary_below_minimum_range_even_after_the_increase.robot
PFPTestCase, "td_CMP_TC011_00_Allocate_Workforce_Compensation_Verify_Custom_Alerts_Employee_Does_Not_Have_A_Performance_Rating", Allocate Workforce Compensation - Verify custom alerts - Employee does not have a performance rating, Not Applicable, HR Specialist Login(PFP_common_test_data.csv), Worksheet Name;Alert Name, Not Applicable, CMP_TC011_00_Allocate_Workforce_Compensation_Verify_Custom_Alerts_Employee_Does_Not_Have_A_Performance_Rating.robot
PFPTestCase, "td_CMP_TC012_00_Allocate_Workforce_Compensation_Verify_custom_alerts_Salary_continuance_employee_should_not_give_increase", Allocate Workforce Compensation - Verify custom alerts - Salary continuance employee - should not give increase, Not Applicable, Manager Login(PFP_common_test_data.csv), Plan(PFP_common_test_data.csv);Task Name;Alert Name, Not Applicable, CMP_TC012_00_Allocate_Workforce_Compensation_Verify_custom_alerts_Salary_continuance_employee_should_not_give_increase.robot
PFPTestCase, "td_CMP_TC013_00_Allocate_Workforce_Compensation_Verify_Custom_Alerts_Employee_Is_On_Probation", Allocate Workforce Compensation - Verify custom alerts - Employee is on probation, Not Applicable, Manager Login(PFP_common_test_data.csv), Plan(PFP_common_test_data.csv);Task Name;Alert Name, Not Applicable, CMP_TC013_00_Allocate_Workforce_Compensation_Verify_Custom_Alerts_Employee_Is_On_Probation.robot
CompensationTestCase, "Compensation_common_test_data", Compensation Admin able to run Synchronize Grade Step Rates Process, Not applicable, HR Specialist Login(Compensation_common_test_data.csv), Grade Ladder Group(Compensation_common_test_data.csv), None, CMP_TC013_Synchronize_Grade_Step_Rates_Process.robot
PFPTestCase, "td_CMP_TC014_00_Allocate_Workforce_Compensation_Employee_Type_NU_Regular", Allocate Workforce Compensation - Employee Type NU Regular (single assignment/ multiple assgn/NU/ BTM etc), Not Applicable, Manager Login(PFP_common_test_data.csv), Proxy Manager Name(PFP_common_test_data.csv);Person Name;LFTRI %;CSAT %;Total Increase Override;Proration Override, Not Applicable, CMP_TC014_00_Allocate_Workforce_Compensation_Employee_Type_NU_Regular.robot
CompensationTestCase, "Compensation_common_test_data", NEW Enhanced Validation when Accepting Manual Grade Step Progressions, Not Applicable, HR Specialist Login(Compensation_common_test_data.csv), Grade Ladder; Grade Ladder Group, Not Applicable, CMP_TC016_NEW_Enhanced_Validation_When_Accepting_Manual_Grade_Step_Progressions.robot
CompensationTestCase, "td_CMP_TC017_New_Attributes_In_Salary_Subject_Areas", New Attributes In Salary Subject Areas, ...            Environment Specific Data:  HR Specialist Login(Compensation_common_test_data.csv), HR Specialist Login(Compensation_common_test_data.csv), NA, NA, CMP_TC017_New_Attributes_In_Salary_Subject_Areas.robot
PFPTestCase, "td_CMP_TC018_00_Allocate_Workforce_Compensation_Employee_Type_NU_Regular_Executive_With_Lump_Sum_Single_Assignment", Allocate Workforce Compensation - Employee Type NU Regular Executive With Lump Sum (Single Assignment), CMP_TC001.01; CMP_TC001.10, , Compensation Option; Proxy Manager Name(PFP_common_test_data.csv);Filter Value;Eligiblity Status;LFTRI %;CSAT %;Total Increase Override;Proration Override, Not Applicable, CMP_TC018_00_Allocate_Workforce_Compensation_Employee_Type_NU_Regular_Executive_With_Lump_Sum_Single_Assignment.robot
CompensationTestCase, "td_CMP_TC018_NEW_Warn_When_Later_Salary_Exists_New_Warning_Message_Added_For_Salary_Records_With_Future_Changes", NEW Warn When Later Salary Exists - New warning message added for salary records with future changes, Not Applicable, HR Specialist Login(Compensation_common_test_data.csv), Grade Ladder; Grade Ladder Group(Compensation_common_test_data.csv), Not Applicable, CMP_TC018_NEW_Warn_When_Later_Salary_Exists_New_Warning_Message_Added_For_Salary_Records_With_Future_Changes.robot
PFPTestCase, "td_CMP_TC033_00_Allocate_Workforce_Compensation_Manage_Budgets_Distribute_Initial_Budget", Allocate Workforce Compensation - Manage Budgets - Distribute Initial Budget, User with Proxy manager access; CMP_TC001.01 - Workforce Compensation - Configuration - Create new plan cycle; CMP_TC001.10 - Workforce Compensation - Standard Functionality - Run Batch Processes - Start Workforce Compensation Cycle, Manager Login(PFP_common_test_data.csv), Budget Pool;Reason;Budget Amount;Distribution Option, Not Applicable, CMP_TC033_00_Allocate_Workforce_Compensation_Manage_Budgets_Distribute_Initial_Budget.robot
PFPTestCase, "td_CMP_TC033_00_Allocate_Workforce_Compensation_Manage_Budgets_Distribute_Initial_Budget", Allocate Workforce Compensation - Manage Budgets - Modify Budget Amount, User with Proxy manager access; CMP_TC001.01 - Workforce Compensation - Configuration - Create new plan cycle; CMP_TC001.10 - Workforce Compensation - Standard Functionality - Run Batch Processes - Start Workforce Compensation Cycle, Manager Login(PFP_common_test_data.csv), Budget Pool;Modify Reason;Modify Budget Amount;Distribution Option, Not Applicable, CMP_TC034_00_Allocate_Workforce_Compensation_Manage_Budgets_Modify_Budget_Amount.robot
, "td_CMP_TC036_00_Workforce_Compensation_Compensation_Change_Statements_Generate_Compensation_Change_Statements", , , , , , CMP_TC036_00_Workforce_Compensation_Compensation_Change_Statements_Generate_Compensation_Change_Statements.robot
DataCreationTestCase, "td_DC01_Data_creation_rehire_without_payroll_details_Comp", Data Creation for Quick Actions -Rehire Manual Without Payroll Details, Not Applicable, Login User, Person Number and Person Name, Relationship Start Date, Legal Employer, Way To Relationship, Why Adding Relationship, Business Unit, Position ID, Currency, Salary Basis, Salary Amount, Login User, Person Number and Person Name, DC01_Data_creation_rehire_without_payroll_details_Comp.robot
NegativeTestCase, "td_DC03_Negative_Scenario_Completed_Performance_Document_Verification_For_Employee_user_group", Check Performance Document in Completed Status for Employee, Annual Performance Document should be available, Login User, Current Task, Review Period and Review Section, DC03_Negative_Scenario_Completed_Performance_Document_Verification_For_Employee_user_group.robot
NegativeTestCase, "td_ESSPAY_TC001_employee_adds_a_payment_method", Employee Adds a Duplicate Payment Mentod, ESSPAY_TC001_employee_adds_a_payment_method, Login User, Bank; Branch Code; What do you want to call this payment method?; Payment Method; Payment Amount; Payment Amount Type, Account Number; Search Bank Account, DC06_Negative_Scenario_ESSPAY_TC001_Employee_Adds_A_Payment_Method.robot
PayrollTestCase, "td_PAY_TC038_Calculate_Retro", Calculate Retro, Not applicable, Login User, Flow Pattern; Start Date; End Date; Payroll; Log Name, Payroll Flow should be unique and should be used in past for each run, DC07_Negative_Scenario_PAY_TC038_PAY_TC041_PAY_TC048_Error_Upon_Providing_The_Same_Flow_Name.robot
BenefitsTestCase, "td_DC08_Data_Creation_For_Mandatory_Vaccination_Reports_For_An_Employee", Data Creation for Mandatory Vaccination Reports for an Employee, Not Applicable, , Document Type;Vaccination Status;Fully Vaccinated Status;Read COVID attestaion and Data provided;File Name, Not Applicable, DC08_Data_Creation_For_Mandatory_Vaccination_Reports_For_An_Employee.robot
CoreHRTestCase, "td_DC09_Terminating_An_Employee_Using_Quick_Actions", Terminating an Employee - Using Quick Actions, Data from Staff List BI is used with the retention period greater than 30 days., Login User; Person Number; Proposed Manager, Action; Comments; Proposed Manager, Person Number, DC09_Terminating_An_Employee_Using_Quick_Actions.robot
PMPTalentTestCase, "td_DC10_Data_setup_for_creating_performance_document", Data setup for creating performance document, Not Applicable, , Role1; Employee Questionnaires; Role2; Manager Questionnaires, Document Period Name; Review Period; Short Name and Document Template(Depend on your requirement), DC10_Data_setup_for_creating_performance_document.robot
PMPTalentTestCase, "td_DC11_Managers_are_unable_to_re_open_the_performance", Managers are unable to re-open the performance, TC01_Employee_Self_Evaluation.robot, Login User and Person Name, Review Period; Document; Action; Action Menu, Not Applicable, DC11_Managers_are_unable_to_re_open_the_performance.robot
PMPTalentTestCase, "td_DC12_Managers_are_unable_to_delete_the_performance_document_mid_year_check_in", Managers are unable to delete the performance document(mid year check in), TC01_Employee_Self_Evaluation.robot, Login User and Person Name, Review Period; Document; Action; Action Menu, Not Applicable, DC12_Managers_are_unable_to_delete_the_performance_document_mid_year_check_in.robot
DataSetup, "td_DC13_add_Payroll_frequency", Add payroll frequency (single assignment and multiple assignment), HR - 81, , Not Applicable, New Hire Employee Number with no Payroll Details, DC13_Add_payroll_frequency.robot
PMPTalentTestCase, "td_DC14_Managers_are_unable_to_delete_the_performance_document_goals", MManagers are unable to delete the performance document(goals), TC01_Employee_Self_Evaluation.robot, Login User and Person Name, Review Period; Document; Action; Action Menu, Not Applicable, DC14_Managers_are_unable_to_delete_the_performance_document_goals.robot
, "td_HR_02", , , , , , DESCOPED_HR_02.robot
, "td_HR_03", , , , , , DESCOPED_HR_03.robot
, "td_HR_07", , , , , , DESCOPED_HR_07.robot
, "td_HR_09", , , , , , DESCOPED_HR_09.robot
, "td_HR_11", , , , , , DESCOPED_HR_11.robot
, "td_HR_13", , , , , , DESCOPED_HR_13.robot
, "td_HR_15", , , , , , DESCOPED_HR_15.robot
, "td_HR_16", , , , , , DESCOPED_HR_16.robot
, "td_HR_17_Transfer_an_Employee", Transfer an Employee, Position code, HR Login User; Position Code; Employee Number, Employment Section;Additional Assignment Info;Maintain Manager Info;Salary Info;Compensation Inf;Reassign reports Info;Add Direct report Info;Comments Info, Transfer Start Date;Reason for Transfer;Position Code;Salary Basis;Salary Amount;Position Seniority Rank;Bargaining Unit Seniority Rank;Section Seniority Date;Contract Start Date;Contract End Date;Contract Type;Contract Reason;Proposed Manager Name;Add Direct Report Name;Comments, DESCOPED_HR_17_Transfer_an_employee.robot
, "td_HR_22", , , , , , DESCOPED_HR_22.robot
, "td_HR_23", , , , , , DESCOPED_HR_23.robot
, "td_HR_24", , , , , , DESCOPED_HR_24.robot
, "td_HR_39", , , , , , DESCOPED_HR_39.robot
, "td_HR_87", , , , , , DESCOPED_HR_87_Quick_Actions_Transfer_An_Employee.robot
, "td_HR_92", , , , , , DESCOPED_HR_92.robot
PayrollTestCase, "td_ESSPAY_TC001_employee_adds_a_payment_method", Employee Adds a Payment Method with a new bank account, Not applicable, Login User, Account Number; Bank; Branch Code; What do you want to call this payment method?; Payment Method; Payment Amount; Search Bank Account and Payment Amount Type, Account Number and Search Bank Account(last 4 digit of account number), ESSPAY_TC001_employee_adds_a_payment_method.robot
PayrollTestCase, "td_ESSPAY_TC002_employee_updates_a_payment_method", Employee updates a payment method, 001__ESSPAY_TC001_employee_adds_a_payment_method, Login User, Payment Method Name and Payment Amount, Not Applicable, ESSPAY_TC002_employee_updates_a_payment_method.robot
PayrollTestCase, "td_ESSPAY_TC003_employee_deletes_a_payment_method", Employee deletes a payment method, 001__ESSPAY_TC001_employee_adds_a_payment_method, Login User, Payment Method Name, Not Applicable, ESSPAY_TC003_employee_deletes_a_payment_method.robot
PayrollTestCase, "td_ESSPAY_TC008_Employee_changes_Federal_Total_Claim_amount", employee changes Federal Total Claim amount, Federal Tax Credit Information should already be logged in the system, , Not Applicable, Not Applicable, ESSPAY_TC008_Employee_changes_Federal_Total_Claim_amount.robot
PayrollTestCase, "td_ESSPAY_TC009_Employee_changes_Federal_Additional_Tax_amount", employee changes Federal Additional Tax amount, Federal Additional Tax Information should already be logged in the system, , Not Applicable, Not Applicable, ESSPAY_TC009_Employee_changes_Federal_Additional_Tax_amount.robot
PayrollTestCase, "td_ESSPAY_TC010_Employee_changes_Provincial_Total_Claim_amount", employee changes Provincial Total Claim amount, Regional Tax Credit Information should already be logged in the system, , Not Applicable, Not Applicable, ESSPAY_TC010_Employee_changes_Provincial_Total_Claim_amount.robot
, "", , , , , , Excel_Report_Utility_Test.robot
, "td_HR_TC_107", , , , , , HR-TC107_Update_Contact_Relationship_Start_Dates_When_Hire_Date_Is_Changed.robot
CoreHRTestCase, "td_HR_25_Employee_updates_personal_information_Address_ESS_E_FT", Employee updates personal Infomration(Address), No data dependency, Employee Login, Address Line 1; Address Line 2, Not Applicable, HR_25_Employee_updates_personal_information_Address_ESS_E_FT.robot
CoreHRTestCase, "td_HR_26_Employee_updates_Person_Information_Biographical_Information_Phone_Number_ESS_E_FT", Employee updateds Biographical Infomration - Phone Number, No data dependency, Employee Login, Type; Area Code, Number, HR_26_Employee_updates_Person_Information_Biographical_Information_Phone_Number_ESS_E_FT.robot
CoreHRTestCase, "td_HR_27_Employee_adds_Contacts_Information_ESS_NU_FT", Employee adds Contact Infomration, No data dependency, Employee Login, Title; Relationship; Start Date, First Name; Last Name, HR_27_Employee_adds_Contacts_Information_ESS_NU_FT.robot
CoreHRTestCase, "td_HR_28_Employee_Updates_Views_Contacts_Information_ESS_NU_FT", Employee updates views - Contacts Information, Not Applicable, Employee Login, Home Number; Address Line 1 and Address Line 2, Not Applicable, HR_28_Employee_Updates_Views_Contacts_Information_ESS_NU_FT.robot
CoreHRTestCase, "td_HR_29_Employee_Updates_Views_Document_Records_ESS_NU_FT", Employee updates views Document Records, Not Applicable, Employee Login, Document Type, Not Applicable, HR_29_Employee_Updates_Views_Document_Records_ESS_NU_FT.robot
CoreHRTestCase, "td_HR_30_Employee_views_employment_details_ESS_NU_FT", Employee views employment details, Not Applicable, Employee Login; HR Login; Manager Name; Employee Person Number, Not Applicable, Business Title, HR_30_Employee_views_employment_details_ESS_NU_FT.robot
CoreHRTestCase, "td_HR_31_Employee_Views_Benefits_Information_ESS_NU_FT", Employee views benefits information, Not Applicable, Employee Login, Dental; Basic Life; Long Term Disablity, Not Applicable, HR_31_Employee_Views_Benefits_Information_ESS_NU_FT.robot
CoreHRTestCase, "td_HR_33_Employee_Views_Payslips_ESS_NU_FT", Employee views payslips, Payroll process executed to generate payslip, Employee Login, Payslip Duration; From Date; To Date, Not Applicable, HR_33_Employee_Views_PaySlips.robot
CoreHRTestCase, "td_HR_33_Employee_Views_Payslips_ESS_NU_FT", Employee views salary information ESS NU FT, Employee details should get from ORC, Employee Login; Manager Login; Employee Login Name(which name of employee login), NA, NA, HR_34_Employee_Views_Salary_Information_ESS_NU_FT.robot
CoreHRTestCase, "td_HR_33_Employee_Views_Payslips_ESS_NU_FT", Employee views T4 ESS NU FT, ...            Environment Specific Data:  Employee Login, Employee Login, Document Type, NA, HR_35_Employee_Views_T4_ESS_NU_FT.robot
CoreHRTestCase, "td_HR_40_Manager_Updates_Views_Skills_And_Qualifications_For_Direct_Reports_MSS_M_FT", Manager updates views skills and qualifications for direct reports, Employee details should get from ORC, Manager Login; Employee Login Name, Not Applicable, File Name, HR_40_Manager_Updates_Views_Skills_And_Qualifications_For_Direct_Reports_MSS_M_FT.robot
CoreHRTestCase, "Core_HR_common_test_data", Manager views compensation for direct reports - MSS - M - FT, Employee details should get from ORC, Manager Login; Employee Login Name, Not Applicable, Not Applicable, HR_41_Manager_Views_Compensation_For_Direct_Reports_MSS_M_FT.robot
CoreHRTestCase, "td_HR_43_Run_Employee_Termination_Report_OTBI_and_validate_all_columns", Run Employee Termination Report (OTBI) and validate all columns, Not Applicable, HR Login, Folder Name; Report Name, Not Applicable, HR_43_Run_Employee_Termination_Report_OTBI_and_validate_all_columns.robot
CoreHRTestCase, "td_HR_44_Metrolinx_Employee_List_Report_with_Addresses_and_Email_added_to_manager_hierarchy_in_the_Parent_Managers_folder", Metrolinx Employee List Report with Addresses and Email (added to manager hierarchy in the Parent Managers folder), Not Applicable, HR Login, Folder Name; Report Name, Not Applicable, HR_44_Metrolinx_Employee_List_Report_with_Addresses_and_Email_added_to_manager_hierarchy_in_the_Parent_Managers_folder.robot
CoreHRTestCase, "td_HR_76_Rehire_calc_card_is_not_filled_with_the_new_assignment_number", Rehire - calc card is not filled with the new assignment number, data_Creation_Rehire_Without_Payroll_Details.robot, HR Login; Person Number, Start Date, Assignment, HR_76_Rehire_calc_card_is_not_filled_with_the_new_assignment_number.robot
CoreHRTestCase, "td_HR_76_Rehire_calc_card_is_not_filled_with_the_new_assignment_number_negative", Add duplicate calculation card to assignment number, HR_76_Rehire_calc_card_is_not_filled_with_the_new_assignment_number, HR Login; Person Number (Use same which is used in HR_76), Start Date, Assignment(Use same which is used in HR_76), HR_76_Rehire_calc_card_is_not_filled_with_the_new_assignment_number_negative.robot
CoreHRTestCase, "td_HR_78_Quick_Actions_Manage_Position_Create_Current_Date", HR Specialist create Position - Quick Actions, Not Applicable, HR Login, Business Unit; Status; Department; Job; Full Time or Part Time; Regular or Temporary; Org Chart is Assistant; Hiring Status; Type; FTE; Head Count; Overlap Allowed, Position Name; Position Code; Effective Start Date, HR_78_Quick_Actions_Manage_Position_Create_Current_Date.robot
CoreHRTestCase, "td_HR_79_Quick_Actions_Manage_Position_Update", HR Specialist Update Position - Quick Actions, HR-78, HR Login, Action Reason; Regular or Temporary; Full Time or Part Time, Position Name; Position Code, HR_79_Quick_Actions_Manage_Position_Update.robot
CoreHRTestCase, "td_HR_81_Quick_Actions_Manual_Hire", Create a manual hire through quick actions, HR-78 ( For Position Code), HR Login; Position Code, Address Type; Address line 1; City; Postal Code; Date of Birth; Gender, New Hire Last Name; New Hire First Name, HR_81_Quick_Actions_Manual_Hire.robot
CoreHRTestCase, "td_HR_82_Quick_Actions_Temp_Assignment_Start", HR Specialist Temp Assignment Start - Quick Actions, HR-81, HR Login; Person Name, Assignment Start Date; Assignment Type; Assignment Way; Assignment Reason; Tax Reporting Unit; Time Card Required; Salary Basics; Salary Amount; Source Assignment Status;Assignment Status, Position ID, HR_82_Quick_Actions_Temp_Assignment_Start.robot
CoreHRTestCase, "td_HR_83_Quick_Actions_Temp_Assignment_End_Current_Date", Temp Assignment End - Quick Actions, HR-82, HR Login; Person Name, Assignment Start Date; Assignment Way, Assignment Number from HR-82, HR_83_Quick_Actions_Temp_Assignment_End_Current_Date.robot
CoreHRTestCase, "td_HR_84_Quick_Actions_Rehire_Manual_Current_Date", Quick Actions -Rehire Manual (Current Date), Functional to pick ex-employee person number - in dynamic test data input sheet, HR Login; Person Number; Person Name, Relationship Start Date; Legal Employer; Way To Relationship; Why Adding Relationship; Business Unit; Tax Reporting Unit; Time Card Required; Currency; Salary Basis; Salary Amount, Position ID, HR_84_Quick_Actions_Rehire_Manual_Current_Date.robot
CoreHRTestCase, "td_HR_85_Quick_Actions_Admin_Update_Personal_Information_Address", Quick Actions -Admin update Personal information - Address, HR-84, HR Login; Employee Name, Area Code; Home Number; Address Line 1; City; Postal Code, Not Applicable, HR_85_Quick_Actions_Admin_Update_Personal_Information_Address.robot
CoreHRTestCase, "td_HR_86_Quick_Actions_Promote_An_Employee", Quick Actions - Promote an employee (Current Date), HR-81, HR Login; Employee Number, Group; Promotion Start Date; Way to Promote; Reason for Promotion; Position; Percentage, Not Applicable, HR_86_Quick_Actions_Promote_An_Employee.robot
CoreHRTestCase, "td_HR_901_Payroll_Section_in_Change_Assignment_Flow", Payroll Section in Change Assignment Flow, Not Applicable, HR Login; Person Number, Person Number, Not Applicable, HR_901_Payroll_Section_in_Change_Assignment_Flow.robot
CoreHRTestCase, "td_HR_902_Employee_Checks_Journeys_ESS", Employee Checks Journeys, Not Applicable, Employee Login, Journey Name, Not Applicable, HR_902_Employee_Checks_Journeys_ESS.robot
CoreHRTestCase, "td_HR_903_Manager_Checks_My_Teams_Journeys", Manager Checks My Teams Journeys, Manager with a direct report with open journey, Manager Login, Journeys option, Not Applicable, HR_903_Manager_Checks_My_Teams_Journeys.robot
CoreHRTestCase, "td_HR_904_Manager_creates_Requisition", Manager creates Requisition, HR02 - Create a position, Manager Login; Position Code, Use; Business Unit; Business Justification; Recruiting Type; Organization; Primary Location, Not applicable, HR_904_Manager_creates_Requisition.robot
CoreHRTestCase, "td_HR_905_Quick_Actions_Manual_Hire_Contract", Create a manual hire(contract) through quick actions, Create a new position using HR-78, HR Login, Address line 1; City; Postal Code; Phone Type; Phone Number; First Name; Last Name; Date of Birth; Gender, Social Insurance Number(Has to be unique for every run; test team used to generate SIN from Google), HR_905_Quick_Actions_Manual_Hire_Contract.robot
CoreHRTestCase, "td_HR_906_Quick_Actions_Manual_Hire_Union", Create a manual hire for union through quick actions, Create a new position using HR-78, HR Login; Position Name, Address Type; Address line 1; City; Postal Code; Date of Birth; Gender; First Name; Last Name, Not Applicable, HR_906_Quick_Actions_Manual_Hire_Union.robot
CoreHRTestCase, "td_HR_907_MX_Complement_and_Vacancy_Report", MX_Complement and Vacancy Report, HR-78 - Create a position, HR Login, Report Name; Downloaded Report Name; Ref Column Name; Validation Column Name; Validation Value, Ref Value(It is getting auto read Position Code from common json file), HR_907_MX_Complement_and_Vacancy_Report.robot
CoreHRTestCase, "td_HR_908_Cultural_Census_2_reports_Detailed_and_Summary", Cultural Census (2 reports - Detailed and Summary), SME Intervention Needed to provide document type, HR Login, Folder Name; Report Name1; Report Name2; Job Name1; Job Name2, Not Applicable, HR_908_Cultural_Census_2_reports_Detailed_and_Summary.robot
CoreHRTestCase, "td_HR_909_Mandatory_Vaccination_Reports_Admin_and_MSS", Mandatory Vaccination Reports (Admin and MSS), Data setup test cases DC08, HR Login; Manager Login, Folder Name; Report Name1; Report Name2, Not Applicable, HR_909_Mandatory_Vaccination_Reports_Admin_and_MSS.robot
CoreHRTestCase, "td_HR_90_Quick_Actions_Reverse_termination", Quick Actions - Reverse termination, DC09_Terminating_An_Employee_Using_Quick_Actions, HR Login; Person Number; Person Name, Action; Parent Action; Child Action, Terminated Person Number; Person Name, HR_90_Quick_Actions_Reverse_termination.robot
CoreHRTestCase, "td_HR_910_Departure", Download Departure Report, Data Creation DC09, HR Login, Report Name, Terminated Employee Number, HR_910_Departure.robot
CoreHRTestCase, "td_HR_911_Sick_Absence_Report", Sick Absence Report, ABS_TC005, HR Login, Folder Name; Report Name, Not Applicable, HR_911_Sick_Absence_Report.robot
CoreHRTestCase, "td_HR_912_Vacation_Leave_Balance", Vacation Leave Balance, No data Dependency, HR Login, Folder Name; Report Name, Not Applicable, HR_912_Vacation_Leave_Balance.robot
CoreHRTestCase, "td_HR_913_Staff_List_BI", Download Staff List BI Report, HR81 - Create an employee record, HR Login, Report Name, Employee Number, HR_913_Staff_List_BI.robot
CoreHRTestCase, "Core_HR_common_test_data", HR - Employee checks Internal Career Site - ESS, Not Applicable, Employee Login, Not Applicable, Not Applicable, HR_914_HR_Employee_Checks_Internal_Career_Site_ESS.robot
CoreHRTestCase, "td_HR_91_Quick_Actions_Edit_Seniority_Dates", Quick Actions - Edit Seniority Dates, HR-84 or Rehire Person Name from ORC, HR Login; Employee Name, Not Applicable, Not Applicable, HR_91_Quick_Actions_Edit_Seniority_Dates.robot
CoreHRTestCase, "td_HR_93_Quick_Actions_Assignment_Change", Assignment Change - Quick Actions, Person number from ORC as a Converted Employee, HR Login; Person Name, Probation Period Value; Probation Period Unit, Assignment Number, HR_93_Quick_Actions_Assignment_Change.robot
CoreHRTestCase, "td_HR_94_Quick_Actions_Record_Correction", Quick Actions - Record Correction, Not Applicable, HR Login; Person Name, Hourly Paid or Salaried, Not Applicable, HR_94_Quick_Actions_Record_Correction.robot
CoreHRTestCase, "td_HR_95_Quick_Actions_Update_Employee_Person_Information", Quick Actions - Update Employee Person Information, Employee details should get from ORC, HR Login; Employee Login Name, Group; Country of Birth; Region of Birth; Town of Birth; Blood Type, Not Applicable, HR_95_Quick_Actions_Update_Employee_Person_Information.robot
CoreHRTestCase, "td_HR_96_Quick_Actions_Delete_Record", Quick Actions - Delete Record, Employee details should get from ORC, HR Login; Employee Login Name, Group, Not Applicable, HR_96_Quick_Actions_Delete_Record.robot
CoreHRTestCase, "td_HR_Filter_Managers_Using_Parent_Position_Hierarchy_in_Responsive_Employment_Pages", Filter Managers Using Parent Position Hierarchy in Responsive Employment Pages, Not Applicable, HR Login, Employee Person Number; Position Code(Which has Parent position with more incumbents), Not Applicable, HR_Filter_Managers_Using_Parent_Position_Hierarchy_in_Responsive_Employment_Pages.robot
CoreHRTestCase, "Core_HR_common_test_data", Time Displayed for Document Records Attachments, Not Applicable, HR Login, Employee Person Number, Not Applicable, HR_Time_Displayed_For_Document_Records_Attachments.robot
CoreHRTestCase, "td_HR_Transaction_Design_Studio_For_HCM_Experience_Design_Studio_Enhancements", Transaction Design Studio For HCM Experience Design Studio Enhancements, Not Applicable, HR Login, Hire an Employee Option1; Hire an Employee Option2, Not Applicable, HR_Transaction_Design_Studio_For_HCM_Experience_Design_Studio_Enhancements.robot
TaleoLearnMXUTestCase12, "td_MXU_TC002_Test_the_user_integration_process", Test the user integration process., Not Applicable, Login User, Report Name, Not Applicable, MXU_TC002_Test_the_user_integration_process.robot
TaleoLearnMXUTestCase, "td_MXU_TC003_Test_the_training_completion_integration_from_MXU_HCM", Test the training completion integration from MXU > HCM., Not Applicable, Login User, Report Name, Not Applicable, MXU_TC003_Test_the_training_completion_integration_from_MXU_HCM.robot
PayrollAbsenceTestCase, "td_PAY_TC001_Get_Accural_Balances_for_Current_Pay_Period_Before_Roll_Back", Run 'Get Accrual balnces' before payroll rollback for upgrade testing, No data dependancy, Login User, Plan Type;Business Unit;Time Range;Execution Time(min);Refresh Cycle(sec), Not Applicable, PAY_TC001_Get_Accural_Balances_for_Current_Pay_Period_Before_Roll_Back.robot
PayrollTestCase, "td_PAY_TC002_Run_Payroll_Activity_Report_For_Current_Pay_Period", Run Payroll Activity Report for Current Pay Period, Not Applicable, , Not Applicable, System Environment Variable, PAY_TC002_Run_Payroll_Activity_Report_For_Current_Pay_Period.robot
PayrollTestCase, "td_PAY_TC003_Roll_Back_Current_Pay_Period_Pay_Slips", Roll back Current Pay Period pay slips, Not applicable, Login User, Legislative Data Group is defined as CA Legislative Data Group; Flow Pattern is defined as Generate Payslip, Payslip Name for the previous pay period(Should be set to the previous month during upgrade testing), PAY_TC003_Roll_Back_Current_Pay_Period_Pay_Slips.robot
PayrollTestCase, "td_PAY_TC004_Roll_Back_Current_Pay_Period_Cheques", Roll back Current pay period cheques, Not applicable, Login User, Legislative Data Group is defined as CA Legislative Data Group; Flow Pattern is defined as Generate Cheque Payments, Cheque Name for the previous pay period(Should be set to the previous month during upgrade testing), PAY_TC004_Roll_Back_Current_Pay_Period_Cheques.robot
PayrollTestCase, "td_PAY_TC005_Roll_back_Current_Pay_Period_Direct_Deposit", Roll back process - Pay period direct deposit, Not applicable, Login User, Legislative Data Group is defined as CA Legislative Data Group; Flow Pattern is defined as MX Generate Direct Deposit Payments, Direct Deposit Name for the previous pay period(Should be set to the previous month during upgrade testing), PAY_TC005_Roll_back_Current_Pay_Period_Direct_Deposit.robot
PayrollTestCase, "td_PAY_TC006_Roll_Back_Current_Pay_Period_Archive", Roll back Process of 'Archive Periodic Payroll Results' for current pay period, Not applicable, Login User, Legislative Data Group is defined as CA Legislative Data Group; Flow Pattern is defined as Archive Periodic Payroll Results, Archive Name for the previous pay period(Should be set to the previous month during upgrade testing), PAY_TC006_Roll_Back_Current_Pay_Period_Archive.robot
PayrollTestCase, "td_PAY_TC007_Roll_Back_Current_Pay_Period_Prepayment", Roll back Process of Current Pay Period prepayment, Not applicable, Login User, Legislative Data Group is defined as CA Legislative Data Group; Flow Pattern is defined as Calculate Prepayments, Prepayment Name for the previous pay period(Should be set to the previous month during upgrade testing), PAY_TC007_Roll_Back_Current_Pay_Period_Prepayment.robot
PayrollTestCase, "td_PAY_TC008_Roll_Back_Current_Pay_Period_Calculate_Payroll", Submit a 'Roll back Process' for current pay period, Not applicable, Login User, Legislative Data Group is defined as CA Legislative Data Group; Flow Pattern is defined as Roll Back Process, Payroll Flow; Payroll Process(Current pay period information needs to be provided) eg.; '012022_Payroll | Calculate Payroll | 2022-01-04 | Biweekly | Complete, PAY_TC008_Roll_Back_Current_Pay_Period_Calculate_Payroll.robot
PayrollTestCase, "td_PAY_TC012_Re_Run_Current_Pay_Period_calculate_payroll", Re-run 'Calculate Payroll' by running process - after rollback, Not Applicable, , Not Applicable, System Environment Variable, PAY_TC012_Re_Run_Current_Pay_Period_calculate_payroll.robot
PayrollTestCase, "td_PAY_TC013_Re_Run_Current_Pay_Period_prepayment", Re-run 'Calculate prepayments' after rollback, Not Applicable, , Not Applicable, System Environment Variable, PAY_TC013_Re_Run_Current_Pay_Period_prepayment.robot
PayrollTestCase, "td_PAY_TC014_Re_Run_Current_Pay_Period_archive", Re-run 'Archive Periodic Payroll results' by submitting a flow, Not applicable, Login User, Flow Pattern; Start Date; End Date; Payroll; Log Name, Payroll Flow should be unique and should not be used in past for each run, PAY_TC014_Re_Run_Current_Pay_Period_archive.robot
PayrollTestCase, "td_PAY_TC015_Re_Run_Current_Pay_Period_direct_deposit", Re-Run process of Direect Deposit for current pay period, Not applicable, Login User, Flow Pattern; Start Date; End Date; Payroll; Log Name; Organization Payment Method; Consolidation Group; Task Name, Payroll Flow should be unique and should not be used in past for each run, PAY_TC015_Re_Run_Current_Pay_Period_direct_deposit.robot
PayrollTestCase678, "td_PAY_TC016_Re_Run_Current_Pay_Period_cheques", Re-run process for Generate chequw payments, Not applicable, Login User, Flow Pattern; Start Date; End Date; Payroll; Log Name; Organization Payment Method; Consolidation Group; Task Name; Start Number;End Number, Payroll Flow should be unique and should not be used in past for each run, PAY_TC016_Re_Run_Current_Pay_Period_cheques.robot
PayrollTestCase1, "td_PAY_TC017_Re_Run_Current_Pay_Period_payslips", Re-run process 'Generate Payslips' after roll back, SME Intervention Needed (Frucntional job - to provide the current pay period details for process submission in test data dynamic input sheet), Login User, Flow Pattern; Payroll; Log Name, Start Date; End Date; Payroll Flow should be unique and should not be used in past for each run, PAY_TC017_Re_Run_Current_Pay_Period_payslips.robot
PayrollTestCase, "td_PAY_TC019_Run_new_Payroll_Activity_Report_and_verify_it_is_same_as_PAY_TC002_or_differences_can_be_explained", Run new Payroll Activity Report and verify it is same as PAY_TC002 or differences can be explained, Not Applicable, , Not Applicable, System Environment Variable, PAY_TC019_Run_new_Payroll_Activity_Report_and_verify_it_is_same_as_PAY_TC002_or_differences_can_be_explained.robot
PayrollTestCase, "td_PAY_TC025_Run_Accrual_Banks_Validation_for_BEE_Timecards_Report_PAY_REP_017", Run Accrual Banks Validation for BEE Timecards Report (PAY-REP-017), PAY-REP-17, Login User, Not applicable, Not applicable, PAY_TC025_Run_Accrual_Banks_Validation_for_BEE_Timecards_Report_PAY_REP_017.robot
PayrollTestCase, "td_PAY_TC029_Run_MX_Delta_Absence_Report_ABS_REP_125", Manager adds a Participant feedback for an Employee, TABS-REP-125, Login User, Not Applicable, Not Applicable, PAY_TC029_Run_MX_Delta_Absence_Report_ABS_REP_125.robot
PayrollTestCase, "td_PAY_TC037_Run_Retro_Notification_report", Run Retro Notification report, Not Applicable, , Not Applicable, System Environment Variable, PAY_TC037_Run_Retro_Notification_report.robot
PayrollTestCase, "td_PAY_TC038_Calculate_Retro", Calculate Retro, Not applicable, Login User, Flow Pattern; Start Date; End Date; Payroll; Log Name, Payroll Flow should be unique and should not be used in past for each run, PAY_TC038_Calculate_Retro.robot
PayrollTestCase, "td_PAY_TC039_Run_Payroll_Retro_Generated_Entries_Report_PAY_REP_024", Run Payroll report for reto genration entried PAY-REP-024, Not applicable, Login User, Report Name, Not Applicable, PAY_TC039_Run_Payroll_Retro_Generated_Entries_Report_PAY_REP_024.robot
PayrollTestCase, "td_PAY_TC040_Run_Retro_Element_Entry_Listing_Net_By_Flow_report_and_review_PAY_REP_49", Run Payroll report for 'Run Retro Element Entry Listing Net By Flow', Not applicable, Login User, Report Name; Retro Flow Name, Not Applicable, PAY_TC040_Run_Retro_Element_Entry_Listing_Net_By_Flow_report_and_review_PAY_REP_49.robot
PayrollTestCase, "td_PAY_TC041_Calculate_Payroll", Calculate Payroll, Not applicable, Login User, Flow Pattern; Payroll; Payroll Period; Run Type; Log Name, Payroll Flow should be unique and should not be used in past for each run, PAY_TC041_Calculate_Payroll.robot
, "td_PAY_TC041_Calculate_Payroll", , , , , , PAY_TC041_Calculate_Payroll_Negative.robot
PayrollTestCase, "td_PAY_TC048_Calculate_Accruals_Seeded_Absence_Process", Calculate Payroll, Not applicable, Login User, Flow Pattern; Todays Date; Payroll; Log Name, Payroll Flow should be unique and should not be used in past for each run, PAY_TC048_Calculate_Accruals_Seeded_Absence_Process.robot
NegativeTestCase, "td_PAY_TC048_Calculate_Accruals_Seeded_Absence_Process", , , , , , PAY_TC048_Calculate_Accruals_Seeded_Absence_Process_Negative.robot
PayrollAbsenceTestCase, "td_PAY_TC070_Verify_Absence_Employee_with_position_change", Verify Absence - Employee with position change, SME intervention needed to change position for an emp, Login User; Person Name; Person Number, Parent Action; Child Action; Accurals; Date; Status, Latest Assignment Name, PAY_TC070_Verify_Absence_Employee_with_position_change.robot
PayrollAbsenceTestCase, "td_PAY_TC072_Verify_Absence_Employee_With_Vacation_Elector", Verify Absence - Employee with Vacation Elector, Not Applicable, Login User, Report Name, Not Applicable, PAY_TC072_Verify_Absence_Employee_With_Vacation_Elector.robot
PayrollTestCase, "td_PAY_TC074_Manage_Calculation_Card_Garnishment_And_Family_Support", Manage Calculation Card - Garnishment and Family Support, Existing employee number, Login User, Person Number, Calculation Card Name; Calculation Component Name 1;Reference Code 1; Calculation Component Name 2; Reference Code 2; Display Name on Value 1; Amount; Display Name on Value 2, Not applicable, PAY_TC074_Manage_Calculation_Card_Garnishment_And_Family_Support.robot
PayrollTestCase, "td_PAY_TC077_Run_QuickPay", Run QuickPay, SME intervention need to provide person number -Can take any exisiting employee number, Login User;Person Number, Not applicable, Not applicable, PAY_TC077_Run_QuickPay.robot
PayrollTestCase, "td_PAY_TC078_Verify_Assignment", Verify Assignment, Need Existing Employee details, Login User; Person Number, Assignment Status, Not applicable, PAY_TC078_Verify_Assignment.robot
PayrollTestCase, "td_PAY_TC079_Verify_Salary", Verify Salary, Need Existing Employee details, Login User; Person Name; Person Number, Parent Action; Child Action, Not applicable, PAY_TC079_Verify_Salary.robot
PayrollTestCase, "td_PAY_TC080_Verify_Calculation_Card", Verify Calculation Cards, Need Existing Employee details, Login User; Person Name; Person Number, Parent Action; Child Action, Not applicable, PAY_TC080_Verify_Calculation_Card.robot
PayrollTestCase, "td_PAY_TC081_Verify_Payment_Method", Verify Payemnt method of an employee, ESSPAY_TC001, Login User; Person Number, Actions; Child Action, Not Applicable, PAY_TC081_Verify_Payment_Method.robot
PayrollTestCase, "td_PAY_TC082_Verify_Person", Verify Person, Need Existing Employee details, Login User; Person Name; Person Number, Parent Action; Child Action, Not applicable, PAY_TC082_Verify_Person.robot
PayrollTestCase, "td_PAY_TC083_Verify_Absence", Verify Absence, Need Existing Employee details, Login User; Person Name, Not Applicable, Not Applicable, PAY_TC083_Verify_Absence.robot
PayrollTestCase, "td_PAY_TC084_Verify_Payroll_Relationship", Verify Payroll Relationship, Need Existing Employee details, Login User; Person Name; Person Number, Parent Action; Child Action; Payroll Status, Not applicable, PAY_TC084_Verify_Payroll_Relationship.robot
PayrollTestCase56897, "td_PAY_TC085_Verify_Element_Entry", Verify Element Entry, Existing employee number, Login User; Person Number, Parent Action; Child Action, Not Applicable, PAY_TC085_Verify_Element_Entry.robot
PayrollTestCase567, "td_PAY_TC086_Verify_Benefit_Plans_Can_Be_Viewed", Verify Benefit Plans Can Be Viewed, SME intervention need, , Not Applicable, Not Applicable, PAY_TC086_Verify_Benefit_Plans_Can_Be_Viewed.robot
PayrollTestCase5678, "td_PAY_TC087_Verify_TRU_Change", Verify TRU Change, SME intervention need, , Parent Action;Child Action, TRU, PAY_TC087_Verify_TRU_Change.robot
PayrollTestCase, "td_PAY_TC088_Verify_Quick_Pay_for_Tax_Card_ESSPAY_TC010", Verify Quick Pay for Tax Card (ESSPAY_TC010), ESSPAY_TC010, Login User; Person Number, Not applicable, Not applicable, PAY_TC090_Verify_Quick_Pay_for_Tax_Card_ESSPAY_TC010.robot
PayrollTestCase, "td_PAY_TC089_Verify_Quick_Pay_for_Tax_Card_ESSPAY_TC009", Verify Quick Pay for Tax Card (ESSPAY_TC008), ESSPAY_TC008, Login User; Person Number, Not applicable, Not applicable, PAY_TC089_Verify_Quick_Pay_for_Tax_Card_ESSPAY_TC009.robot
PayrollTestCase, "td_PAY_TC090_Verify_Quick_Pay_for_Tax_Card_ESSPAY_TC008", Verify Quick Pay for Tax Card (ESSPAY_TC008), ESSPAY_TC008, Login User; Person Number, Not applicable, Not applicable, PAY_TC088_Verify_Quick_Pay_for_Tax_Card_ESSPAY_TC008.robot
PayrollTestCase, "td_PAY_TC091_Verify_New_Hire_With_Quick_Pay", Verify New Hire with Quick Pay, HR-81 (Need New hire Employee details), Login User; Person Number, Not applicable, Not applicable, PAY_TC091_Verify_New_Hire_With_Quick_Pay.robot
PayrollTestCase, "td_PAY_TC092_Verify_Rehire_With_Quick_Pay", Verify Re-hire with Quick Pay, HR-84 (Need Re-hire Employee details), Login User; Person Number, Not applicable, Not applicable, PAY_TC092_Verify_Rehire_With_Quick_Pay.robot
PayrollTestCase, "td_PAY_TC093_Verify_Termination_With_Quick_Pay", Verify Termination with Quick Pay, Need Fresh Terminated Employee details, Login User; Person Number, Not applicable, Not applicable, PAY_TC093_Verify_Termination_With_Quick_Pay.robot
PayrollTestCase, "td_PAY_TC094_Verify_Benefit_Changes_With_Quick_Pay", Verify Benefit changes with Quick Pay, TC014, Login User; Person Number, Not applicable, Not applicable, PAY_TC094_Verify_Benefit_Changes_With_Quick_Pay.robot
PayrollTestCase, "td_PAY_TC095_Verify_New_Temp_Assignment_With_Quick_Pay", Verify new Temp Assignment with Quick Pay, HR-82, Login User; Person Number, Not applicable, Not applicable, PAY_TC095_Verify_New_Temp_Assignment_With_Quick_Pay.robot
PayrollTestCase, "td_PAY_TC096_Balance_Adjustment", Balance Adjustment, SME intervention need to provide person number -Can take any exisiting employee number, Login User; Person Number, Not applicable, Element Name;Assignment Name;Calculation Component;Rate, PAY_TC096_Balance_Adjustment.robot
SecurityRoleTestCase, "td_SEC_TC001_MX_General_Human_Resources_Inquiry", MX General Human Resources Inquiry, HR-81 and Require an user with MX General Human Resources Inquiry Role, Login User; Person Number, Person Name;Homepage Option1;Homepage Option2;Homepage Option3;Client group Apps1;Client group Apps2;Client group quick option1;Client group quick option2;Parent Action;Child Action, Not Applicable, SEC_TC001_MX_General_Human_Resources_Inquiry.robot
SecurityRoleTestCase, "td_SEC_TC002_MX_Total_Rewards_Representative", Security Testing - MX Total Rewards Representative, Person Number can be created from HR 81, Login User, Person Number, Not applicable, SEC_TC002_MX_Total_Rewards_Representative.robot
SecurityRoleTestCase, "td_SEC_TC003_MX_HRBP_Representative", Security Testing - MX HRBP Representative, Person Number can be created from HR 81, Login User, Person Number, Not applicable, SEC_TC003_MX_HRBP_Representative.robot
SecurityRoleTestCase, "td_SEC_TC004_MX_Health_and_Wellness_Representative", role to test on MX Health and Wellness Representative, Not Applicable, Login User;Person Name;Person Number, Action Menu1;Action Menu2;Personal and Employment Select Sub Menu, Not Applicable, SEC_TC004_MX_Health_and_Wellness_Representative.robot
SecurityRoleTestCase, "td_SEC_TC005_MX_Organizational_Development_Representative", Security Testing - MX Organizational Development Representative, Person Number can be created from HR 81, Login User, Person Number, Not applicable, SEC_TC005_MX_Organizational_Development_Representative.robot
SecurityRoleTestCase, "td_SEC_TC006_MX_Learning_Administrator", MX Learning Administrator, HR-81 and Require an user with MX Learning Administrator Role, Login User; Person Number, Person Name;Homepage Option1;Homepage Option2;Homepage Option3;Client group Apps1;Client group Apps2;Client group quick option1;Client group quick option2;Parent Action;Child Action, Not Applicable, SEC_TC006_MX_Learning_Administrator.robot
SecurityTestCase, "td_SEC_TC007_MX_Employee_Relations_Representative", Security Testing - MX Employee Relations Representative, Require an user with MX Employee Relations Representative Role, Login User meeting the prerequisite; Person number, Person Number, Not applicable, SEC_TC007_MX_Employee_Relations_Representative.robot
SecurityRoleTestCase, "td_SEC_TC008_MX_HR_Reporting_And_Analytics_Specialist", MX HR Reporting and  Analytics Specialist, HR-81 and Require an user with MX HR Reporting and  Analytics Specialist Role, Login User; Person Number, Person Name;Homepage Option1;Homepage Option2;Homepage Option3;My Client Apps;Action Menu1;Parent Action;Child Action, Not Applicable, SEC_TC008_MX_HR_Reporting_And_Analytics_Specialist.robot
SecurityRoleTestCase, "td_SEC_TC009_MX_HR_Systems_Administrator", MX HR Systems Administrator, Not Applicable, Login User; Person Number, Person Name;Action Menu1;Action Menu2;Action Menu3;Action Menu4;Personal and Employment Select Sub Menu;Edit Menu1;Edit Menu2;Edit Menu3, Not Applicable, SEC_TC009_MX_HR_Systems_Administrator.robot
SecurityRoleTestCase, "td_SEC_TC010_MX_HR_Leader", MX HR Leader, HR-81 and Require an user with MX HR Leader Role, Login User; Person Number, Person Name;Homepage Option1;Homepage Option2;Homepage Option3;Client group Apps1;Client group Apps2;Client group quick option1;Client group quick option2;Action Menu1;Parent Action;Child Action;Benefits Apps;Tools Apps, Not Applicable, SEC_TC010_MX_HR_Leader.robot
SecurityRoleTestCase, "td_SEC_TC011_MX_Talent_Aquistion_Representative", MX Talent Acquisition Representative, Not Applicable, Login User; Person Number, Person Name;Action Menu1;Action Menu2;Action Sub Menu;Edit Menu1;Edit Menu2;Edit Menu3, Not Applicable, SEC_TC011_MX_Talent_Aquistion_Representative.robot
SecurityRoleTestCase, "td_SEC_TC012_MX_MX_HR_Services", Security Testing - MX HR Services, Person Number can be created from HR 81, Login User, Person Number, Not applicable, SEC_TC012_MX_HR_Services.robot
SecurityRoleTestCase, "td_SEC_TC022_MX_Employee_Self_Service", Security Testing - MX Employee Self Service, ...            Environment Specific Data:  Login User with MX Employee Self Service Role, Login User with MX Employee Self Service Role, Not applicable, Not applicable, SEC_TC022_MX_Employee_Self_Service.robot
SecurityRoleTestCase, "td_SEC_TC023_MX_Manager_Self_Service", Security Testing - MX Manager Self Service, An Employee should be a reportee to the Manager, Login User with MX Manager Self Service Role, Not applicable, Not applicable, SEC_TC023_MX_Manager_Self_Service.robot
BenefitsTestCase, "td_TC001_Life_Event_New_Hire", New Hire Life event creation in Benefits Enrollment, HR-81; Newly Hired Person details should be present in environment, , Not Applicable, Not Applicable, TC001_Life_Event_New_Hire.robot
BenefitsTestCase, "td_TC002_Life_Event_Transfer", Transfer Event created in Benefits Enrollment, HR-17; Newly Transferred Person details should be present in environment, Login User(Benefits_common_test_data.csv); Person Number of respective newly transferred employee(Benefits_common_test_data.csv); Transfer Date to verify, , Not Applicable, TC002_Life_Event_Transfer.robot
BenefitsTestCase, "td_TC003_Life_Event_Salary_Change", Salary change Life Event creation in Benefits Enrollment, HR-81; Newly Hired Person details should be present in environment, , Not Applicable, Not Applicable, TC003_Life_Event_Salary_Change.robot
Benefits123, "td_TC004_Life_Event_Termination", Life Event - Termination., Person number generated by creating a Manual hire through HR-81, Login User(Benefits_common_test_data.csv); Person Number(Benefits_common_test_data.csv), Life Event; Action Value, Occurred Date must be in future, TC004_Life_Event_Termination.robot
BenefitsTestCase, "td_TC005_Terminate_Employees_Benefits", Terminate Employees Benefits in benefits Enrollment, DC09, , Not Applicable, Employee person number whose tenure is more than 30 days(Benefits_common_test_data.csv); terminated and life event is in detected state, TC005_Terminate_Employees_Benefits.robot
BenefitsTestCase, "td_TC006_Add_Benefit_Plans", Add Benefits Plans in benefits Enrollment, HR-81; Newly Hired Person details should be present in environment; DC-13 Add Payroll Frequency, , Not Applicable, Not Applicable, TC006_Add_Benefit_Plans.robot
BenefitsTestCase, "td_TC007_Override_Benefit_Plans", Override Benefit Plans in Benefits Enrollment, TC006, , Start Date, Not Applicable, TC007_Override_Benefit_Plans.robot
Benefits, "td_TC008_Add_dependent_s_to_an_employees_benefit_plans", Add dependent(s) to an employees benefit plans., Not Applicable, Login User(Benefits_common_test_data.csv); Person Number(Benefits_common_test_data.csv), Relationship, Last Name and use current date as Relationship Start Date, TC008_Add_dependent_s_to_an_employees_benefit_plans.robot
BenefitsTestCase, "td_TC009_Validate_The_Rates", Validate The Rates, Employee person number should be available in environment, , Not Applicable, Not Applicable, TC009_Validate_The_Rates.robot
BenefitsTestCase, "td_TC010_Temp_assignment", Events created in Benefits post Temp assignment creation, HR-09; Person details should be present in environment, LoginUser is environment specific(Benefits_common_test_data.csv); Person Number of respective employee(Benefits_common_test_data.csv), , Not Applicable, TC010_Temp_assignment.robot
BenefitsTestCase, "td_TC011_End_of_Temp_Assignement", End of Temporary Assignment, HR-83, , Not Applicable, Not Applicable, TC011_End_of_Temp_assignmement.robot
BenefitsTestCase, "td_TC014_Benefits_Retro_Change_For_Grade_Sync_Process", Benefits retro change for grade sync process, ...            Environment Data:  Login User is environment specific(Benefits_common_test_data.csv), , Person Number(Benefits_common_test_data.csv), Effective Date should be past date, Not Applicable, TC014_Benefits_Retro_Change_For_Grade_Sync_Process.robot
Benefits, "td_TC015_Validate_the_file_format", Validate the File Format, ...            Environment Specific Data:  Login User(Benefits_common_test_data.csv), Login User(Benefits_common_test_data.csv), Person Number(Benefits_common_test_data.csv), Report Name(Benefits_common_test_data.csv), Not applicable, TC015_Validate_the_file_format.robot
Benefits, "td_TC016_Validate_the_Flex_code_for_an_employee_with_Dependents", Validate the File Format, TC015, Login User(Benefits_common_test_data.csv), Person Number(Benefits_common_test_data.csv), Report Name(Benefits_common_test_data.csv), Not applicable, TC016_Validate_the_Flex_code_for_an_employee_with_Dependents.robot
Benefits, "td_TC017_Interface_Validate_the_location_and_class_code", Validate the File Format, TC015, Login User(Benefits_common_test_data.csv), Person Number(Benefits_common_test_data.csv),Report Name(Benefits_common_test_data.csv), On Data, Not applicable, TC017_Interface_Validate_the_location_and_class_code.robot
NegativeTestCase, "td_TC01_Negative_Completed_Performance_Document_Verification_For_Manager", Check Performance Document in Completed status, Annual Performance Document should be available, Manager Login(PMP_Talent_common_test_data.csv), Not Applicable, Review Period; Review Section; Manager Name, TC01_Completed_Performance_Document_Verification_For_Manager_Negative_Scenario.robot
PMPTalentTestCase, "td_TC01_Employee_Self_Evaluation", Performance Document Self Evaluation by Employee, Require a new annual performance document and then assign the performance document.[DC10; TC117 and TC12], Employee Login(PMP_Talent_common_test_data.csv), Comment; FY Year; Rating; Status, Performace Doc(PMP_Talent_common_test_data.csv), TC01_Employee_Self_Evaluation.robot
PMPTalentTestCase, "td_TC02_Manager_Participant_Feedback", Manager adds a Participant feedback for an Employee, TC01_Employee_Self_Evaluation.robot, Manager Login(PMP_Talent_common_test_data.csv); Participants Name; Person Name(PMP_Talent_common_test_data.csv), Action Menu; Due Date, Action, TC02_Manager_Participant_Feedback.robot
PMPTalentTestCase, "td_TC03_Participants_Provide_Feedback", Participant provides feedback, TC02_Manager_Participant_Feedback.robot, Participant Login(PMP_Talent_common_test_data.csv), Comment, Performace Doc(PMP_Talent_common_test_data.csv), TC03_Participants_Provide_Feedback.robot
PMPTalentTestCase, "td_TC04_Manager_views_Participant_Feedback", Manager views Participant Feedback, TC03_Participants_Provide_Feedback.robot, Manager Login(PMP_Talent_common_test_data.csv); Person Name(PMP_Talent_common_test_data.csv), Comment, Performace Doc(PMP_Talent_common_test_data.csv), TC04_Manager_views_Participant_Feedback.robot
PMPTalentTestCase, "td_TC05_Manager_Completes_and_Submits_the_Employee_Evaluation", Manager submites the Employee Evaluation, TC04_Manager_views_Participant_Feedback.robot, Manager Login(PMP_Talent_common_test_data.csv), Comment; Feedback Rating; Feedback Comment; Performance Rating; Performance Comment; Competency Rating; Competency Comment, Performace Doc(PMP_Talent_common_test_data.csv), TC05_Manager_Completes_and_Submits_the_Employee_Evaluation.robot
PMPTalentTestCase, "td_TC06_Total_Rewards_Representative_unlocks_the_Annual_Performance_Review_Document", , , , , , TC06_Total_Rewards_Representative_unlocks_the_Annual_Performance_Review_Document.robot
PMPTalentTestCase, "td_PMP_TC07_Manager_Share_Annual_Performance_Review_Document_with_the_Employee", Manager - Share Annual Performance Review Document with the employee, Annual Performance Review Document for Employee should be available in Share and release status, Manager Login(PMP_Talent_common_test_data.csv), Not Applicable, Review Period; Performace Doc; Manager Name, TC07_Manager_Share_Annual_Performance_Review_Document_with_the_Employee.robot
PMPTalentTestCase, "td_PMP_TC08_Employee_Provide_Final_Feedback_on_Annual_Performance_Review_Document", Employee - Provide Final Feedback on Annual Performance Review Document, Annual Performance Review Document should be available in Acknowledge and Complete Performance Document status, Employee Login(PMP_Talent_common_test_data.csv), Current Task, Review Period; Performace Doc, TC08_Employee_Provide_Final_Feedback_on_Annual_Performance_Review_Document.robot
PMPTalentTestCase, "td_PMP_TC10_Employee_Creates_Performance_Goals", Employee-Creates Performance Goals, Require Active Performance Document, Employee Login(PMP_Talent_common_test_data.csv), Goal Description; Goal Status; Comments, Review Period; Review Section; Goal Plan; Goal Name; Start Date; End Date, TC10_Employee_Creates_Performance_Goals.robot
PMPTalentTestCase130701, "td_TC117_HR_Assigns_Mid_Year_Performance_Documents", HR Assigns Mid year Performance Documents, Mid year performance document Created, , Setup Maintenance Group;Batch Type;Review Period;Performance Document Name, NA, TC117_HR_Assigns_Mid_Year_Performance_Documents.robot
PMPTalentTestCase, "td_TC124_Manager_Updates_Goals_In_Mid_Year_Document", Manager Check-In, TC121, Manager Login(PMP_Talent_common_test_data.csv); Employee Name(PMP_Talent_common_test_data.csv), Test Comment;Meeting Option, Review Section, TC118_Manager_Check_In.robot
PMPTalentTestCase, "td_TC124_Manager_Updates_Goals_In_Mid_Year_Document", Participant Feedback(Manager requests for Participant feedback), PMP TC124 and Need Performance document active for an employee, , Review Period;Review Section;Action;Message, Not Applicable, TC119_Participant_Feedback_Manager_Requests_For_Participant_Feedback.robot
PMPTalentTestCase, "td_PMP_TC11_Assign_Performance_Documents", Assign Performance documents, Not Applicable, HR Specialist Login(PMP_Talent_common_test_data.csv), Setup Maintenace Group; Batch Type; Review Period;Performance Document Name; Maximum Threads Create for Performance Document, Not Applicable, TC11_Assign_Performance_Documents.robot
PMPTalentTestCase130702, "td_TC124_Manager_Updates_Goals_In_Mid_Year_Document", Participant submits the feedback requested by Manager, TC119_Participant Feedback(Manager requests for Participant feedback);Review Section; Employee Name Used in TC119, , Participant Comment, Not Applicable, TC120_Participant_Feedback_Manager_Requests_For_Participant_Feedback.robot
PMPTalentTestCase, "td_TC124_Manager_Updates_Goals_In_Mid_Year_Document", Participant Feedback(Manager views Participant feedback), PMP TC120 and Need Performance document active for an employee, , Review Period;Review Section, Not Applicable, TC121_Participant_Feedback_Manager_Views_Participant_Feedback.robot
PMPTalentTestCase, "td_TC124_Manager_Updates_Goals_In_Mid_Year_Document", Employee Check-In, PMP_TC118 and  Annual Performance Document should be Active status, Employee Login(PMP_Talent_common_test_data.csv), Review Period; Review Section;Met With Manager;Employee Check in Comments, Not Applicable, TC122_Employee_Check_In.robot
PMPTalentTestCase, "td_TC124_Manager_Updates_Goals_In_Mid_Year_Document", Manager views employee Check-In, PMP_TC122, , Review Period;Review Section, Not Applicable, TC123_Manager_Views_Employee_Check_In.robot
PMPTalentTestCase, "td_TC124_Manager_Updates_Goals_In_Mid_Year_Document", Manager updates goals in mid-year document, PMP TC117 and Need Performance document active for an employee, , Review Period;Review Section;Goal Name;Goal Description;Goal Status;Comments, Not Applicable, TC124_Manager_Updates_Goals_In_Mid_Year_Document.robot
PMPTalentTestCase, "td_TC12_Manager_Creates_Performance_Goals", Manager creates Goals for his direct report, Not Applicable, , Employee Name(PMP_Talent_common_test_data.csv); FY Year; Goal Name; Description; Start Date; Target Completion Date; Status; Comments, Not Applicable, TC12_Manager_Creates_Performance_Goals.robot
PMPTalentTestCase, "td_TC13_Employee_Edit_Performance_Goals", Performance Document Self Evaluation by Employee, TC12 Manager should have already created Performance Goal with name provided, , FY Year; Goal Name; Status; Comments, Not Applicable, TC13_Employee_Edit_Performance_Goals.robot
PMPTalentTestCase, "td_TC14_Manager_Edit_Performance_Goals", Manager edits one of his direct report's Goal, TC12 Manager should have already created Performance Goal with name provided, , FY Year; Goal Name; Status; Comments; Description;Target Completion Date, Not Applicable, TC14_Manager_Edit_Performance_Goals.robot
PMPTalentTestCase, "td_TC15_Manager_Transfer_Performance_Documents", Manager transfers Performance document of his direct report, SME Intervention Needed, Manager Login(PMP_Talent_common_test_data.csv); Manager Name; Person Name(PMP_Talent_common_test_data.csv), Action Menu, Action, TC15_Manager_Transfer_Performance_Documents.robot
PMPTalentTestCase, "td_TC16_Manager_Delete_Performance_Goals", Manager deletes Performance Goals of his direct report, TC12_Manager_Creates_Performance_Goals.robot, Manager Login(PMP_Talent_common_test_data.csv); Manager Name; Person Name(PMP_Talent_common_test_data.csv), Action Menu, Goal Name; FY Year, TC16_Manager_Delete_Performance_Goals.robot
PMPTalentTestCase, "td_TC17_Employee_Delete_Performance_Goals", Employee deletes a Performance Goal, TC12_Manager_Creates_Performance_Goals.robot, Employee Login(PMP_Talent_common_test_data.csv), Not Applicable, FY Year; Goal Name, TC17_Employee_Delete_Performance_Goals.robot
BenefitsTestCase, "td_TC801_Contact_Person_Number_To_Identify_Benefit_Contact", Contact Person Number To Identify Benefit Contact, ...            Environment Data:  Login User is environment specific(Benefits_common_test_data.csv), , Person Number(Benefits_common_test_data.csv), Dependent Name, Dependent Person Number, Not Applicable, TC801_Contact_Person_Number_To_Identify_Benefit_Contacts.robot
, "", , , , , , test.robot
, "td_BP001", , , , , , testHCM_BP001.robot
ContractPayableTestCase, "td_CP_01_Sending_contract_payable_record_for_financial_review", , , , , , Unifier_CP_01_Sending_contract_payable_record_for_financial_review.robot
ContractPayableTestCase, "td_CP_02_Creating_record_in_contract_payable_using_autocreation_through_property_contract", , , , , , Unifier_CP_02_Creating_record_in_contract_payable_using_autocreation_through_property_contract.robot
PropertyContractBUTestCase, "td_CRE_TC001_Copy_Property_Contract_record_to_another_property_shell", , , , , , Unifier_CRE_TC001_Copy_Property_Contract_record_to_another_property_shell.robot
OwnedPropertyBUTestCase, "td_TC011_25_Update_a_Property_Contract_and_add_a_new_Line_Item_in_Payment_Setup_with_Overhold", , , , , , Unifier_CRE_TC008_Batch_Upload_Owned_Properties_Records_using_the_MX_CRE_BU_shell.robot
ContractReceivableTestCase, "td_CR_01_Creating_record_in_contract_receivable_using_autocreation_through_property_contract", , , , , , Unifier_CR_01_Creating_record_in_contract_receivable_using_autocreation_through_property_contract.robot
PropertyContractTestCase, "td_E2E1_04_TC006_01_Create_an_Account_Receivable_Lease_type_contract_with_no_line_items", , , , , , Unifier_E2E1_04_TC006_01_Create_an_Account_Receivable_Lease_type_contract_with_no_line_items.robot
PropertyContract, "td_E2E1_05_TC014_00_Add_an_OPEX_Line_item_to_an_existing_Property_Contract", , , , , , Unifier_E2E1_05_TC014_00_Add_an_OPEX_Line_item_to_an_existing_Property_Contract.robot
PropertyContract, "td_E2E1_06_TC024_00_Set_up_critical_dates_Clauses_Insurances_etc", , , , , , Unifier_E2E1_06_TC024_00_Set_up_critical_dates_Clauses_Insurances_etc.robot
PropertyContract, "td_E2E1_07_TC008_00_Create_an_A-P_License_type_contract_with_no_line_items", , , , , , Unifier_E2E1_07_TC008_00_Create_an_A-P_License_type_contract_with_no_line_items.robot
PropertyContract, "td_E2E1_08_TC011_01_Add_a_CAPEX_Line_item_to_an_existing_Property_Contract", , , , , , Unifier_E2E1_08_TC011_01_Add_a_CAPEX_Line_item_to_an_existing_Property_Contract.robot
ContractReceivableTestCase002, "td_Contract_Receivable_test_data", , , , , , Unifier_E2E1_10_TC014.12_Reject_Invoice_Finance_team_rejects_a_Contract_Receivable_(A-R).robot
PropertyContract, "td_E2E1_15_TC014_17_Error_Correction_corrections_are_made_in_Unifier_by_CRE_Reviewer_and_sent_for_Finance_Review_status_changes_to_Pending_Review2", Error Correction - corrections are made in Unifier by CRE Reviewer and sent for Finance Review status changes to Pending_Review, ...            Environment Specific Data:  Login User, Login User, Workspace Name; Contract Receivable Name to be present in Tasks, Not applicable, Unifier_E2E1_15_TC014_17_Error_Correction_corrections_are_made_in_Unifier_by_CRE_Reviewer_and_sent_for_Finance_Review_status_changes_to_Pending_Review2.robot
PropertyContract, "td_E2E1_19_TC014_21_View_Invoice_record_Review_invoice_records_and_confirm_that_status_of_invoices_is_changed_to_Pending_Payment_validate_EBS_Info", Review invoice records and confirm that status of invoices is changed to Pending Payment validate Payment due date and EBS Information (EBS Invoice #, EBS Invoice ID, EBS creation date), Corresponding EBS Invoice #, EBS Creation Date, EBS Invoice ID has to be manually filled in the CSV file, Login User, Workspace Name; Contract Receivable Name with Payment Pending Status, Not applicable, Unifier_E2E1_19_TC014_21_View_Invoice_record_Review_invoice_records_and_confirm_that_status_of_invoices_is_changed_to_Pending_Payment_validate_EBS_Info.robot
UnifierTest345678, "td_Unifier_Test", , , , , , Unifier_FeasibilityTest.robot
LeaseActionTestCase, "td_LA_01_Create_a_lease_action_record", , , , , , Unifier_LA_01_Create_a_lease_action_record.robot
LeaseActionTestCase002, "td_LA_02_Auto_creation_of_Lease_Action_record_using_property_contract", , , , , , Unifier_LA_02_Auto_creation_of_Lease_Action_record_using_property_contract.robot
UnifierNegativeTest, "td_Unifier_Negative_scenarios_test_data", , , , , , Unifier_NS_01_Current_term_expiry_date_cannot_be_earlier_than_current_term_start_date_for_property_contract.robot
UnifierNegativeTest, "td_Unifier_Negative_scenarios_test_data", , , , , , Unifier_NS_02_Current_term_expiry_date_cannot_be_earlier_than_contract_start_date_for_property_contract.robot
UnifierNegativeTest, "td_Unifier_Negative_scenarios_test_data", , , , , , Unifier_NS_03_Payment_end_date_cannot_be_earlier_than_payment_start_date_in_property_contract_line_item_payment_setup.robot
NegativeTestNS04, "td_BP001", , , , , , Unifier_NS_04_Remediation_or_restoration_end_date_cannot_be_earlier_than_remediation_or_restoration_start_date_in_owned_property_line_item_environmental_condition.robot
NegativeTestNS05, "td_BP001", , , , , , Unifier_NS_05_End_date_must_be_equal_to_or_greater_than_start_date_in_owned_property_line_item_property_reservation.robot
VendorIntegration, "td_TC001_02_Verify_Vendors_info_Details_Vendors_Sites_and_Contact_info_in_Unifier_for_any_newly_created_Vendor_in_EBS", Vendor's info (Details Vendor’s Sites and Contact info) in Unifier for any newly created Vendor in EBS, New Vendor has to be created in EBS, Login User, ...            Dynamic Data: Not applicable, Not applicable, Unifier_TC001_02_Verify_Vendors_info_Details_Vendors_Sites_and_Contact_info_in_Unifier_for_any_newly_created_Vendor_in_EBS.robot
VendorIntegration, "td_TC001_03_Verify_Vendor_Header_information_in_Unifier_for_any_newly_created_Vendor_Header_in_EBS", Verify Vendor Header information in Unifier, for any newly created Vendor Header in EBS, New Vendor has to be created in EBS, Login User, ...            Dynamic Data: Not applicable, Not applicable, Unifier_TC001_03_Verify_Vendor_Header_information_in_Unifier_for_any_newly_created_Vendor_Header_in_EBS.robot
VendorIntegration, "td_TC001_06_Verify_Vendor_records_in_Unifier_to_existing_Vendor_record_in_EBS_should_be_updated_in_Unifier_via_interface", Verify Vendor records in Unifier to existing Vendor record in EBS should be updated in Unifier via interface, Add Site Information to an existing Vendor, Login User, ...            Dynamic Data: Not applicable, Not applicable, Unifier_TC001_06_Verify_Vendor_records_in_Unifier_to_existing_Vendor_record_in_EBS_should_be_updated_in_Unifier_via_interface.robot
VendorIntegration, "td_TC001_08_Merged_vendors_are_interfaced_in_Unifier_and_the_status_is_updated", Merged vendors are interfaced in Unifier and the status is updated, Vendors have to be merged , Login User, Vendor ID Vendor Name Vendor Number Merged Vendor ID, Not applicable, Unifier_TC001_08_Merged_vendors_are_interfaced_in_Unifier_and_the_status_is_updated.robot
CustomerIntegrationTestCase, "td_TC002_01_Verify_Customers_info_Details_Customers_Sites_and_Contact_info_in_Unifier_for_any_newly_created_Customer_in_EBS", , , , , , Unifier_TC002.01_Verify_Customers_Info_In_Unifier_for_any_newly_created_customer_in_EBS.robot
CustomerSiteIntegrationTestCase, "td_TC002_03_Verify_customer_records_in_unifier_to_existing_customers_record_in_ebs_should_be_updated_in_unifier", , , , , , Unifier_TC002.03_Verify_Customers_records_in_Unifier_to_existing_customer_record_in_EBS_should_be_updated_in_Unifier_via_Interface.robot
CustomerIntegrationTestCase, "td_Customer_integration_negative_scenarios", , , , , , Unifier_TC002.04_Verify_Customer_record_cannot_be_deleted.robot
CustomerIntegrationTestCase, "td_Customer_integration_negative_scenarios", , , , , , Unifier_TC002.05_Verify_Customer_site_record_cannot_be_deleted.robot
CustomerIntegrationTestCase, "td_Customer_integration_negative_scenarios", , , , , , Unifier_TC002.06_Verify_Customer_record_cannot_be_created.robot
CustomerIntegrationTestCase, "td_Customer_integration_negative_scenarios", , , , , , Unifier_TC002.07_Verify_Customer_site_cannot_be_created.robot
GLIntegration, "td_TC003_01_Verify_Account_Codes_info_in_Unifier_for_any_newly_created_Account_Codes_in_EBS", Verify Account Codes info in Unifier for any newly created Account Codes in EBS, Cost Center Code, Location Code and Account Code has to be created in EBS, Login User,Account Code,Cost Center Code,Location Code, ...            Dynamic Data: Not applicable, Not applicable, Unifier_TC003_01_Verify_Account_Codes_info_in_Unifier_for_any_newly_created_Account_Codes_in_EBS.robot
PropertyContract, "td_TC003_02_Verify_valid_GL_code_combination_is_blank_when_user_selects_the_first_segment_Business_Line_and_second_segment_Cost_Center_of_the_GL_Code", Verify valid GL code combination is blank when user selects the first segment (Business Line) and second segment (Cost Center) of the GL Code, GL Codes to be present in EBS, Login User; Valid Business Line; Valid Cost Center, Property Workspace Name;MX CRE File;Contract Name;Contract Type;Contract Rent Structure;Status;Original Contract Start Date;Current Term Start Date;Current Term Expiry Date;Tenant Entity Type;Landlord Entity Type;Process Rent;Tax Classification;CAPEX-OPEX;, Not applicable, Unifier_TC003_02_Verify_valid_GL_code_combination_is_blank_when_user_selects_the_first_segment_Business_Line_and_second_segment_Cost_Center_of_the_GL_Code.robot
GLIntegration, "td_TC003_05_Verify_GL_Codes_records_in_Unifier_to_existing_Account_Codes_record_in_EBS_record_should_be_updated_in_Unifier_via_interface", Verify GL Codes records in Unifier to existing Account Codes record in EBS record should be updated in Unifier via interface, GL Code to be updated in EBS  GL Code, BL Code, BL ID, BL Description should be updated in CSV file as update in EBS, Login User, ...            Dynamic Data: Not applicable, Not applicable, Unifier_TC003_05_Verify_GL_Codes_records_in_Unifier_to_existing_Account_Codes_record_in_EBS_record_should_be_updated_in_Unifier_via_interface.robot
GLIntegration, "td_TC003_06_Verify_GL_Codes_records_cannot_be_deleted", Verify GL Codes records cannot be deleted, Not Applicable, Login User, Not Applicable, Not applicable, Unifier_TC003_06_Verify_GL_Codes_records_cannot_be_deleted.robot
GLIntegration, "td_TC003_07_Verify_GL_Codes_records_cannot_be_created", Verify GL Codes records cannot be created, Not Applicable, Login User, Not Applicable, Not applicable, Unifier_TC003_07_Verify_GL_Codes_records_cannot_be_created.robot
GLIntegration, "td_TC003_08_Verify_GL_Codes_records_cannot_be_updated", Verify GL Codes records cannot be updated, Not Applicable, Login User, Not Applicable, Not applicable, Unifier_TC003_08_Verify_GL_Codes_records_cannot_be_updated.robot
PropertyContract, "td_TC003_09_Verify_valid_GL_code_combination_is_auto_populated_when_user_selects_the_first_segment_Business_Line_and_second_segment_Cost_Center_of_the_GL_Code", Verify valid GL code combination is auto populated when user selects the first segment (Business Line) and second segment (Cost Center) of the GL Code, GL Codes to be present in EBS, Login User; Valid Business Line; Valid Cost Center, Property Workspace Name;MX CRE File;Contract Name;Contract Type;Contract Rent Structure;Status;Original Contract Start Date;Current Term Start Date;Current Term Expiry Date;Tenant Entity Type;Landlord Entity Type;Process Rent;Tax Classification;CAPEX-OPEX;, Not applicable, Unifier_TC003_09_Verify_valid_GL_code_combination_is_auto_populated_when_user_selects_the_first_segment_Business_Line_and_second_segment_Cost_Center_of_the_GL_Code.robot
OwnedPropertyTest, "td_BP001", , , , , , Unifier_TC005.00_Create_Owned_Properties.robot
OwnedPropertyTest, "td_E2E1_04_TC006_01_Create_an_Account_Receivable_Lease_type_contract_with_no_line_items", , , , , , Unifier_TC005.01_View_And_Update_Owned_Properties.robot
OwnedPropertyTest002, "td_E2E1_04_TC006_01_Create_an_Account_Receivable_Lease_type_contract_with_no_line_items", , , , , , Unifier_TC005.02_Create_a_full_disposition_line_item_within_an_existing_owned_properties.robot
OwnedPropertyTest004, "td_E2E1_04_TC006_01_Create_an_Account_Receivable_Lease_type_contract_with_no_line_items", , , , , , Unifier_TC005.04_Create_a_remediation_line_item_within_an_existing_owned_properties.robot
OwnedPropertyTest006, "td_E2E1_04_TC006_01_Create_an_Account_Receivable_Lease_type_contract_with_no_line_items", , , , , , Unifier_TC005.06_View_and_update_an_owned_properties_line_item_record.robot
PropertyContract, "td_TC006_02_Create_an_Accounts_Receivable_Sublease_type_Lease_contract_with_no_line_items", Create an Accounts Receivable Sublease type Lease contract with no line items, NA, Property Workspace Name;MX CRE File, Contract Name;Contract Type as Lease;Contract Rent Structure;Status;Original Contract Start Date;Current Term Start Date;Current Term Expiry Date;Tenant Entity Type;Landlord Entity Type, Not applicable, Unifier_TC006_02_Create_an_Accounts_Receivable_Sublease_type_Lease_contract_with_no_line_items.robot
PropertyContract, "td_TC006_03_Create_an_A_R_Lease_type_contract_with_a_3rd_Party_Lease_and_is_MX_Owned_with_no_line_items", Create an A/R Lease type contract with a 3rd Party Lease and is MX Owned (with no line items), NA, Property Workspace Name;MX CRE File, Contract Name;Contract Type;Contract Rent Structure;Head Lease or Sublease;MX Owned or Leased;Status;Original Contract Start Date;Current Term Start Date;Current Term Expiry Date;Tenant Entity Type;Landlord Entity Type, Not applicable, Unifier_TC006_03_Create_an_A_R_Lease_type_contract_with_a_3rd_Party_Lease_and_is_MX_Owned_with_no_line_items.robot
PropertyContract, "td_TC008_01_Create_an_A_R_License_type_contract_with_no_line_items", Create an A/R License type contract with no line items, NA, Property Workspace Name;MX CRE File, Contract Name;Contract Type as License;Contract Rent Structure;Status;Original Contract Start Date;Current Term Start Date;Current Term Expiry Date;Tenant Entity Type;Landlord Entity Type, Not applicable, Unifier_TC008_01_Create_an_A_R_License_type_contract_with_no_line_items.robot
PropertyContract, "td_TC010_02_Create_an_A_R_Sublease_Sublicense_Sublease_with_no_line_items", Create an A/R Sublease/Sublicense Sublease with no line items, NA, Property Workspace Name;MX CRE File, Contract Name;Contract Type;Contract Rent Structure;Status;Original Contract Start Date;Current Term Start Date;Current Term Expiry Date;Tenant Entity Type;Landlord Entity Type, Not applicable, Unifier_TC010_02_Create_an_A_R_Sublease_Sublicense_Sublease_with_no_line_items.robot
PropertyContract, "td_TC011_25_Update_a_Property_Contract_and_add_a_new_Line_Item_in_Payment_Setup_with_Overhold", , , , , , Unifier_TC011_25_Update_a_Property_Contract_and_add_a_new_Line_Item_in_Payment_Setup_with_Overhold.robot
PropertyContract, "td_TC011_26_Update_an_existing_Property_Contract_with_an_expiry_3_years_later_and_add_2_OptionCritical_Dates", , , , , , Unifier_TC011_26_Update_an_existing_Property_Contract_with_an_expiry_3_years_later_and_add_2_OptionCritical_Dates.robot
PropertyContract, "td_TC014_11_Validate_Invoice_CRE_team_Validates_the_Invoices_for_Lease_Easement_License_Sublease_Sublicense_Oper_Maint_and_status_changes_to_Pending_Review", Validate Invoice(s) - CRE team Validates the Invoices for Lease, Easement, License, Sublease/Sublicense, Oper/Maint and status changes to "Pending_Review", ...            Environment Specific Data:  Login User, Login User, Workspace Name; Contract Receivable Name to be present in Tasks, Not applicable, Unifier_TC014_11_Validate_Invoice_CRE_team_Validates_the_Invoices_for_Lease_Easement_License_Sublease_Sublicense_Oper_Maint_and_status_changes_to_Pending_Review.robot
BoardOrderTestCase, "td_BP001", , , , , , Unifier_TC017_00_Create_A_Board_Order.robot
Reports, "td_TC025_15_Run_the_Occupancy_Report", Run the Occupancy Report, NA, Login User, Not applicable, Not applicable, Unifier_TC025_15_Run_the_Occupancy_Report.robot
Reports, "td_TC025_16_Run_the_Payment_Variance_Report_A_R", Run the Payment Variance Report A/R, NA, Login User, Not applicable, Not applicable, Unifier_TC025_16_Run_the_Payment_Variance_Report_A_R.robot
Reports, "td_TC025_18_Utility_Bills_Report", Run the Utility Bills Report, NA, Login User, Not applicable, Not applicable, Unifier_TC025_18_Utility_Bills_Report.robot
PropertyTaxInvoice, "td_TC27_00_Create_Property_Tax_Invoice_CAPEX_OPEX", , , , , , Unifier_TC27_00_Create_Property_Tax_Invoice_CAPEX_OPEX.robot
PropertyTaxInvoice, "td_TC27_01_Generate_Property_Tax_Invoice_User_Defined_Report", Generate Property Tax Invoice (User Defined Report), NA, Login User, Vendor Name, Vendor ID, Not applicable, Not applicable, Unifier_TC27_01_Generate_Property_Tax_Invoice_User_Defined_Report.robot
